res_ordered <- as.data.frame(resOrdered)
res_ordered$Geneid <- rownames(res_ordered)
nrow(res_ordered)
head(res_ordered)
length(unique(res_ordered$Geneid))
options(scipen=999)
#plotCounts(dds,gene="gene678", intgroup='species')
total_genes <- nrow(res_ordered)
de_total <- nrow(res_ordered[which(res_ordered$padj < 0.01),])
de_up <- (nrow(res_ordered[which(res_ordered$log2FoldChange > 0 & res_ordered$padj < 0.01),]))/total_genes
de_dn <- (nrow(res_ordered[which(res_ordered$log2FoldChange < 0 & res_ordered$padj < 0.01),]))/total_genes
prop_de <- de_total/total_genes
#sample_sizes_plot <- paste(sample_size_a, " vs ", sample_size_b, sep = "")
#png("C:/Users/jmcgirr/Documents/remote_pups/de/split_populations/de_genes_20dpf_design_crp_and_osp_mvp.png", width = 4, height = 4, units = 'in', res = 500)
plotMA(resLFC, ylim=c(-2.5,3), xaxt = "n")
axis(1,at = c(0.1,10,1000,100000), labels = c("0.1","10","1000","100000"))
#dev.off()
prop_de
install.packages(apeglm)
install.packages("apeglm")
BiocManager::install("apeglm")
# for DE
res <- results(dds, alpha=0.01)
resOrdered <- res[order(res$padj),]
summary(res)
resLFC <- lfcShrink(dds, coef=2, res=res)
res_ordered <- as.data.frame(resOrdered)
res_ordered$Geneid <- rownames(res_ordered)
nrow(res_ordered)
head(res_ordered)
length(unique(res_ordered$Geneid))
options(scipen=999)
#plotCounts(dds,gene="gene678", intgroup='species')
total_genes <- nrow(res_ordered)
de_total <- nrow(res_ordered[which(res_ordered$padj < 0.01),])
de_up <- (nrow(res_ordered[which(res_ordered$log2FoldChange > 0 & res_ordered$padj < 0.01),]))/total_genes
de_dn <- (nrow(res_ordered[which(res_ordered$log2FoldChange < 0 & res_ordered$padj < 0.01),]))/total_genes
prop_de <- de_total/total_genes
#sample_sizes_plot <- paste(sample_size_a, " vs ", sample_size_b, sep = "")
#png("C:/Users/jmcgirr/Documents/remote_pups/de/split_populations/de_genes_20dpf_design_crp_and_osp_mvp.png", width = 4, height = 4, units = 'in', res = 500)
plotMA(resLFC, ylim=c(-2.5,3), xaxt = "n")
library(apeglm)
library(DESeq2)
samples <- read.table("table_maker_master_lakes.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
samples <- filter(samples, species != "h") %>% filter(stage == "8dpf")
#samples <- filter(samples, species != "h") %>% filter(stage == "48hpf")
#samples <- filter(samples, species != "h") %>% filter(stage == "17_20dpf")
#samples <- filter(samples, species != "a")
samples <- filter(samples, lake == "Crescent Pond"| lake == "Osprey Lake")
#samples <- filter(samples, lake == "Crescent Pond"| lake == "Osprey Lake"| lake == "Little Lake")
#samples <- filter(samples, f1 == "OPxOM"| f1 == "OSPP"| f1 == "OSPM"| f1 == "CMxCP"| f1 == "CRPP"| f1 == "CRPM") %>% filter(stage == "8dpf")
#samples <- filter(samples, f1 == "OPxOM"| f1 == "OSPM") %>% filter(stage == "8dpf")
cts <- read.table("counts_all_feature_types_jeremy_gff.txt",row.names=1, header = TRUE, stringsAsFactors = FALSE, sep = "\t")
cts <- cts[samples$sample]
row.names(samples) <- samples$sample
samples$sample <- NULL
cts <- as.matrix(cts)
colData <- as.matrix(samples)
head(colData)
ncol(cts)
nrow(colData)
dds <- DESeqDataSetFromMatrix(countData = cts,
colData = colData,
design= ~p_unique)
dds <- estimateSizeFactors(dds)
idx <- rowSums(counts(dds, normalized=TRUE) >= 1 ) >= 1
length(rowSums(counts(dds, normalized=TRUE) >= 1 ) >= 1)
length(idx)
dds <- dds[idx,]
dds <- DESeq(dds)
# for normalized counts
#res <- results(dds, contrast=c("species","m","p"))
#res <- results(dds, contrast=c("species","a","p"))
norm_cts <- data.frame(counts(dds, normalized=TRUE))
head(norm_cts)
norm_cts$GeneID <- row.names(norm_cts)
#write.table(norm_cts, "C:/Users/jmcgirr/Documents/remote_pups/hybrid_inheritance_and_misregulation/normalized_counts_8dpf_design_f1_om_v_opxom_jeremy_gff.txt", row.names = FALSE, quote= FALSE,sep="\t")
#write.table(norm_cts, "C:/Users/jmcgirr/Documents/remote_pups/de/split_populations/normalized_counts_17_20dpf_design_crp_and_lil_mvp_stringtie_danio.txt", row.names = FALSE, quote= FALSE,sep="\t")
# for DE
res <- results(dds, alpha=0.01)
resOrdered <- res[order(res$padj),]
summary(res)
resLFC <- lfcShrink(dds, coef=2, res=res)
res_ordered <- as.data.frame(resOrdered)
res_ordered$Geneid <- rownames(res_ordered)
nrow(res_ordered)
head(res_ordered)
length(unique(res_ordered$Geneid))
options(scipen=999)
plotCounts(dds,gene="gene678", intgroup='species')
total_genes <- nrow(res_ordered)
de_total <- nrow(res_ordered[which(res_ordered$padj < 0.01),])
de_up <- (nrow(res_ordered[which(res_ordered$log2FoldChange > 0 & res_ordered$padj < 0.01),]))/total_genes
de_dn <- (nrow(res_ordered[which(res_ordered$log2FoldChange < 0 & res_ordered$padj < 0.01),]))/total_genes
prop_de <- de_total/total_genes
prop_de
#png("C:/Users/jmcgirr/Documents/remote_pups/de/split_populations/de_genes_20dpf_design_crp_and_osp_mvp.png", width = 4, height = 4, units = 'in', res = 500)
plotMA(resLFC, ylim=c(-2.5,3), xaxt = "n")
#png("C:/Users/jmcgirr/Documents/remote_pups/de/split_populations/de_genes_20dpf_design_crp_and_osp_mvp.png", width = 4, height = 4, units = 'in', res = 500)
plotMA(resLFC, ylim=c(-2.5,3))
resLFC
#png("C:/Users/jmcgirr/Documents/remote_pups/de/split_populations/de_genes_20dpf_design_crp_and_osp_mvp.png", width = 4, height = 4, units = 'in', res = 500)
plotMA(res, ylim=c(-2.5,3))
genes <- read.table("c_brontotheroides.all.renamed.putative_function.genes_only.reformated.known.final.saf", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
names(genes) <- c("GeneID","seqnames", "start",  "end", "strand")
genes$start <- genes$start -10000
genes$end <- genes$end +10000
genes <- genes %>% as_granges()
de <- read.table("de_genes_8dpf_design_crp_and_osp_mvp.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
de_48 <- read.table("de_genes_48hpf_design_crp_and_osp_mvp_jeremy_genes.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
de_17 <- read.table("de_genes_17_20pf_design_crp_and_lil_mvp_jeremy_genes.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
de <-  de[which(de$padj <= 0.01),]
de <- de$Geneid
de_48 <-  de_48[which(de_48$padj <= 0.01),]
de_48 <- de_48$Geneid
de_17 <-  de_17[which(de_17$padj <= 0.01),]
de_17 <- de_17$Geneid
genes <- read.table("c_brontotheroides.all.renamed.putative_function.genes_only.reformated.known.final.saf", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
names(genes) <- c("GeneID","seqnames", "start",  "end", "strand")
genes$start <- genes$start -10000
genes$end <- genes$end +10000
genes <- genes %>% as_granges()
de <- read.table("de_genes_8dpf_design_crp_and_osp_mvp.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
de_48 <- read.table("de_genes_48hpf_design_crp_and_osp_mvp_jeremy_genes.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
de_17 <- read.table("de_genes_17_20pf_design_crp_and_lil_mvp_jeremy_genes.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
de <-  de[which(de$padj <= 0.01),]
de <- de$Geneid
de_48 <-  de_48[which(de_48$padj <= 0.01),]
de_48 <- de_48$Geneid
de_17 <-  de_17[which(de_17$padj <= 0.01),]
de_17 <- de_17$Geneid
fst <- read.table("C:/Users/jmcgirr/Documents/remote_pups/second_submission/popgen/merged_fst_all_pupfish_filtered_snps_passed.Q20.MAF0.05.MAXMISS0.5.recode.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
quantile(fst$WEIR_AND_COCKERHAM_FST.2, 0.99)
high_fst <- fst[which(fst$WEIR_AND_COCKERHAM_FST.2 > 0.72 & fst$WEIR_AND_COCKERHAM_FST.2 < 1),]
high_fst$end <- high_fst$POS +1
names(high_fst) <- c("seqnames", "start", "all_v_m",  "all_v_p", "m_v_p","end")
high_fst <- high_fst %>% as_granges()
high_fst <- join_overlap_intersect(high_fst, genes) %>% as.data.frame()
num_snps <- high_fst[high_fst$GeneID %in% c(de,de_48,de_17), ]
high_fst <- unique(high_fst$GeneID)
fst <- read.table("merged_fst_all_pupfish_filtered_snps_passed.Q20.MAF0.05.MAXMISS0.5.recode.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
quantile(fst$WEIR_AND_COCKERHAM_FST.2, 0.99)
high_fst <- fst[which(fst$WEIR_AND_COCKERHAM_FST.2 > 0.72 & fst$WEIR_AND_COCKERHAM_FST.2 < 1),]
high_fst$end <- high_fst$POS +1
names(high_fst) <- c("seqnames", "start", "all_v_m",  "all_v_p", "m_v_p","end")
high_fst <- high_fst %>% as_granges()
high_fst <- join_overlap_intersect(high_fst, genes) %>% as.data.frame()
num_snps <- high_fst[high_fst$GeneID %in% c(de,de_48,de_17), ]
high_fst <- unique(high_fst$GeneID)
fixed <- read.table("fixed_snps_mvp.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
fixed$end <- fixed$POS +1
names(fixed) <- c("seqnames", "start", "all_v_m",  "all_v_p", "m_v_p","end")
fixed <- fixed %>% as_granges()
fixed <- join_overlap_intersect(fixed, genes) %>% as.data.frame()
num_snps <- fixed[fixed$GeneID %in% c(de,de_48,de_17), ]
fixed <- unique(fixed$GeneID)
dxy <- read.csv("mxp_popgen_stats_corrected.csv", header = TRUE, stringsAsFactors = FALSE)
dxy <-  dxy[which(dxy$corr_dxy >= quantile(dxy$corr_dxy,0.90)[[1]]),]
names(dxy)[names(dxy)== "scaffold"] <- "seqnames"
dxy <- dxy %>% as_granges()
dxy <- join_overlap_intersect(dxy, genes) %>% as.data.frame()
dxy <- unique(dxy$GeneID)
popgen <- unique(intersect(high_fst,dxy))
sv <- read.table("shared_pvm_Svs.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
sv <- sv %>% as_granges()
sv <- join_overlap_intersect(sv, genes) %>% as.data.frame()
sv <- unique(sv$GeneID)
fixed_filter_de <- intersect(c(fixed,sv),c(de,de_48,de_17))
outlier_filter_de <- intersect(popgen,c(de,de_48,de_17))
#### fixed SNPs and deletions 1,10,20 kb ####
listInput <- list(de_48 = de_48 ,de = de,de_17 = de_17,fixed_snps = fixed, fixed_SVs = sv)
names(listInput) <- c("differentially expressed 2 dpf","differentially expressed 8 dpf","differentially expressed 20 dpf","near fixed SNP", "near fixed deletion")
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/upsetr_fixed_1kb.png" , width = 12, height = 7, units = 'in', res = 600)
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/upsetr_fixed_10kb.png", width = 12, height = 7, units = 'in', res = 600)
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/upsetr_fixed_20kb.png", width = 12, height = 7, units = 'in', res = 600)
upset(fromList(listInput), sets = rev(names(listInput)),order.by = "freq", point.size = 3.4, line.size = 1.2,
mainbar.y.label = "genes intersecting", sets.x.label = "genes", nsets = 6,
text.scale = c(2, 1.6, 1.5, 1.4, 2,1.6),keep.order = TRUE)
#dev.off()
#### high Fst and dxy 1,10,20 kb ####
listInput <- list(de_48 = de_48 ,de = de,de_17 = de_17, high_fst = high_fst,dxy = dxy)
names(listInput) <- c("differentially expressed 2 dpf","differentially expressed 8 dpf","differentially expressed 20 dpf","Fst > 0.72","Dxy > 0.0083")
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/upsetr_high_fst_dxy_1kb.png" , width = 12, height = 7, units = 'in', res = 600)
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/upsetr_high_fst_dxy_10kb.png", width = 12, height = 7, units = 'in', res = 600)
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/upsetr_high_fst_dxy_20kb.png", width = 12, height = 7, units = 'in', res = 600)
upset(fromList(listInput), sets = rev(names(listInput)),order.by = "freq", point.size = 3.4, line.size = 1.2,
mainbar.y.label = "genes intersecting", sets.x.label = "genes", nsets = 6,
text.scale = c(2, 1.6, 1.5, 1.4, 2,1.6),keep.order = TRUE)
#dev.off()
diff_de <- unique(intersect(popgen, c(de_48 ,de)))
diff_de_cis <-  unique(intersect(diff_de, c(c8_cis, c2_cis, o8_cis, o2_cis)))
length(diff_de_cis)
cis_all <- unique(c(c8_cis, c2_cis, o8_cis, o2_cis))
fixed_de_cis <- intersect(c(sv,fixed),intersect(cis_all,c(de_48 ,de)))
setwd("C:/Users/jmcgirr/Documents/GitHub/fishfASE/data_files/markdown")
setwd("C:/Users/jmcgirr/Documents/GitHub/fishfASE/data_files/markdown")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(reticulate)
library(UpSetR)
library(plyranges)
library(venn)
library(DESeq2)
library(apeglm)
# color-blind friendly
# Wong, B. Points of view: Color blindness. Nat Methods (2011).
bla <- "#000000"
blu <- "#0072b2"
grb <- "#56b4e9"
lir <- "#cc79a7"
gre <- "#009e73"
red <- "#d55e00"
org <- "#e69f00"
yel <- "#f0e442"
gry<-  '#BBBBBB'
setwd("C:/Users/jmcgirr/Documents/GitHub/fishfASE/data_files/markdown")
setwd("C:/Users/jmcgirr/Documents/GitHub/fishfASE/markdown/data_files")
inheritance_and_ase <- read.table("inheritance_and_ase_crp_8dpf.txt", header = TRUE, stringsAsFactors = FALSE)
cis <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "yes" &
inheritance_and_ase$sig_trans == "no"),]
c8_cis <- unique(cis$Geneid)
trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "no" &
inheritance_and_ase$sig_trans == "yes"),]
c8_trans <- unique(trans$Geneid)
cis_plus_trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "yes" &
inheritance_and_ase$sig_trans == "yes" &
inheritance_and_ase$H_sign == inheritance_and_ase$P_sign),]
c8_cis_plus_trans <- unique(cis_plus_trans$Geneid)
c8_cis_plus_trans <- setdiff(c8_cis_plus_trans,c(c8_cis,c8_trans))
cis_by_trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "yes" &
inheritance_and_ase$sig_trans == "yes" &
inheritance_and_ase$H_sign != inheritance_and_ase$P_sign),]
c8_cis_by_trans <- unique(cis_by_trans$Geneid)
c8_cis_by_trans <- setdiff(c8_cis_by_trans,c(c8_cis,c8_trans))
###
inheritance_and_ase <- read.table("inheritance_and_ase_osp_8dpf.txt", header = TRUE, stringsAsFactors = FALSE)
cis <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_osp_hyb == "yes" &
inheritance_and_ase$sig_trans == "no"),]
o8_cis <- unique(cis$Geneid)
trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_osp_hyb == "no" &
inheritance_and_ase$sig_trans == "yes"),]
o8_trans <- unique(trans$Geneid)
cis_plus_trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_osp_hyb == "yes" &
inheritance_and_ase$sig_trans == "yes" &
inheritance_and_ase$H_sign == inheritance_and_ase$P_sign),]
o8_cis_plus_trans <- unique(cis_plus_trans$Geneid)
o8_cis_plus_trans <- setdiff(o8_cis_plus_trans,c(o8_cis,o8_trans))
cis_by_trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_osp_hyb == "yes" &
inheritance_and_ase$sig_trans == "yes" &
inheritance_and_ase$H_sign != inheritance_and_ase$P_sign),]
o8_cis_by_trans <- unique(cis_by_trans$Geneid)
o8_cis_by_trans <- setdiff(o8_cis_by_trans,c(o8_cis,o8_trans))
###
inheritance_and_ase <- read.table("inheritance_and_ase_crp_48hpf.txt", header = TRUE, stringsAsFactors = FALSE)
cis <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "yes" &
inheritance_and_ase$sig_trans == "no"),]
c2_cis <- unique(cis$Geneid)
trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "no" &
inheritance_and_ase$sig_trans == "yes"),]
c2_trans <- unique(trans$Geneid)
cis_plus_trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "yes" &
inheritance_and_ase$sig_trans == "yes" &
inheritance_and_ase$H_sign == inheritance_and_ase$P_sign),]
c2_cis_plus_trans <- unique(cis_plus_trans$Geneid)
c2_cis_plus_trans <- setdiff(c2_cis_plus_trans,c(c2_cis,c2_trans))
cis_by_trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "yes" &
inheritance_and_ase$sig_trans == "yes" &
inheritance_and_ase$H_sign != inheritance_and_ase$P_sign),]
c2_cis_by_trans <- unique(cis_by_trans$Geneid)
c2_cis_by_trans <- setdiff(c2_cis_by_trans,c(c2_cis,c2_trans))
###
inheritance_and_ase <- read.table("inheritance_and_ase_osp_48hpf.txt", header = TRUE, stringsAsFactors = FALSE)
cis <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_osp_hyb == "yes" &
inheritance_and_ase$sig_trans == "no"),]
o2_cis <- unique(cis$Geneid)
trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_osp_hyb == "no" &
inheritance_and_ase$sig_trans == "yes"),]
o2_trans <- unique(trans$Geneid)
cis_plus_trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_osp_hyb == "yes" &
inheritance_and_ase$sig_trans == "yes" &
inheritance_and_ase$H_sign == inheritance_and_ase$P_sign),]
o2_cis_plus_trans <- unique(cis_plus_trans$Geneid)
o2_cis_plus_trans <- setdiff(o2_cis_plus_trans,c(o2_cis,o2_trans))
cis_by_trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_osp_hyb == "yes" &
inheritance_and_ase$sig_trans == "yes" &
inheritance_and_ase$H_sign != inheritance_and_ase$P_sign),]
o2_cis_by_trans <- unique(cis_by_trans$Geneid)
o2_cis_by_trans <- setdiff(o2_cis_by_trans,c(o2_cis,o2_trans))
my_cols <- c(red,blu,yel,gry)
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/cis_cross_overlap.png" , width = 3, height = 3, units = 'in', res = 600)
venn(list(c2_cis=c2_cis,o2_cis=o2_cis,c8_cis=c8_cis,o8_cis=o8_cis),
ilabels = TRUE, cexsn = 0.70, cexil = 0.85, zcolor = my_cols,box = FALSE, opacity = 0.6,ilcs = 0.9,sncs = 0.5)
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/cis_cross_overlap.png" , width = 3, height = 3, units = 'in', res = 600)
venn(list(c2_cis=c2_cis,o2_cis=o2_cis,c8_cis=c8_cis,o8_cis=o8_cis),
ilabels = TRUE, cexsn = 0.70, cexil = 2, zcolor = my_cols,box = FALSE, opacity = 0.6,ilcs = 0.9,sncs = 0.5)
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/cis_cross_overlap.png" , width = 3, height = 3, units = 'in', res = 600)
venn(list(c2_cis=c2_cis,o2_cis=o2_cis,c8_cis=c8_cis,o8_cis=o8_cis),
ilabels = TRUE, cexsn = 2, cexil = 0.85, zcolor = my_cols,box = FALSE, opacity = 0.6,ilcs = 0.9,sncs = 0.5)
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/cis_cross_overlap.png" , width = 3, height = 3, units = 'in', res = 600)
venn(list(c2_cis=c2_cis,o2_cis=o2_cis,c8_cis=c8_cis,o8_cis=o8_cis),
ilabels = TRUE, cexsn = 0.70, cexil = 0.85, zcolor = my_cols,box = FALSE, opacity = 0.6,ilcs = 2,sncs = 0.5)
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/cis_cross_overlap.png" , width = 3, height = 3, units = 'in', res = 600)
venn(list(c2_cis=c2_cis,o2_cis=o2_cis,c8_cis=c8_cis,o8_cis=o8_cis),
ilabels = TRUE, cexsn = 0.70, cexil = 0.85, zcolor = my_cols,box = FALSE, opacity = 0.6,ilcs = 0.9,sncs = 2)
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/cis_cross_overlap.png" , width = 3, height = 3, units = 'in', res = 600)
venn(list(c2_cis=c2_cis,o2_cis=o2_cis,c8_cis=c8_cis,o8_cis=o8_cis),
ilabels = TRUE, cexsn = 0.70, cexil = 0.85, zcolor = my_cols,box = FALSE, opacity = 0.6,ilcs = 0.9,sncs = 1)
inheritance_and_ase <- read.table("inheritance_and_ase_crp_8dpf.txt", header = TRUE, stringsAsFactors = FALSE)
head(inheritance_and_ase)
cis <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "yes" &
inheritance_and_ase$sig_trans == "no"),]
trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "no" &
inheritance_and_ase$sig_trans == "yes"),]
cis_plus_trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "yes" &
inheritance_and_ase$sig_trans == "yes" &
inheritance_and_ase$H_sign == inheritance_and_ase$P_sign),]
cis_by_trans <- inheritance_and_ase[which(inheritance_and_ase$padj_mp <= 0.05 &
inheritance_and_ase$ase_in_crp_hyb == "yes" &
inheritance_and_ase$sig_trans == "yes" &
inheritance_and_ase$H_sign != inheritance_and_ase$P_sign),]
con <- inheritance_and_ase[! inheritance_and_ase$Geneid %in% c(cis$Geneid,trans$Geneid,cis_plus_trans$Geneid,cis_by_trans$Geneid),]
my_cols <- c(red,bla,blu,yel,gry)
plot(inheritance_and_ase$LFC_mp, inheritance_and_ase$LFC_mph, pch =16, col = "white", cex.axis=1.3,
xlim = c(-3.5,3.5),ylim = c(-2,2), xlab = "", ylab = "")
points(con$LFC_mp,con$LFC_mph, col = my_cols[5])
points(trans$LFC_mp,trans$LFC_mph, col = my_cols[2],pch = 16, cex = 1.2)
points(cis_plus_trans$LFC_mp,cis_plus_trans$LFC_mph, col = my_cols[4],pch = 16, cex = 1.2)
points(cis_by_trans$LFC_mp,cis_by_trans$LFC_mph, col = my_cols[3],pch = 16, cex = 1.2)
points(cis$LFC_mp,cis$LFC_mph, col = my_cols[1],pch = 16, cex = 1.2)
abline(v=0, col = "black", lty = 3, lwd = 1.8)
abline(h=0, col = "black", lty = 3, lwd = 1.8)
legend("topleft", inset=0,
c(paste("cis ", round((nrow(cis))/(nrow(inheritance_and_ase))*100,2),"%", sep = ""),
paste("trans ", round((nrow(trans))/(nrow(inheritance_and_ase))*100,2),"%", sep = ""),
paste("cis x trans ", round((nrow(cis_by_trans))/(nrow(inheritance_and_ase))*100,2),"%", sep = ""),
paste("cis + trans ", round((nrow(cis_plus_trans))/(nrow(inheritance_and_ase))*100,2),"%", sep = ""),
paste("conserved ", round(((nrow(inheritance_and_ase)-(nrow(cis_plus_trans)+nrow(cis_by_trans)+nrow(trans)+nrow(cis))))/(nrow(inheritance_and_ase))*100,2),"%", sep = "")),
pt.cex = 1.3, col=my_cols, horiz=FALSE, bty="n",pch =c(16,16,16,16,1))
#dev.off()
#### make plot like McManus 2010 4B
inheritance_and_ase <- read.table("inheritance_all_genes_crp_and_osp_8dpf.txt", header = TRUE, stringsAsFactors = FALSE)
#Hybrid inheritance was considered additive if gene expression was intermediate between
#molluscivores and scale-eaters with significant differential expression between molluscivores and
#scale-eaters. Inheritance was dominant if
#hybrid expression was significantly different from one parent but not the other.
#Genes showing misexpression in hybrids showed transgressive inheritance, where hybrid gene
#expression was significantly higher (overdominant) or lower (underdominant) than parental
#populations.
total_genes <- nrow(inheritance_and_ase)
con <- inheritance_and_ase[which(inheritance_and_ase$padj_mph > 0.01 & inheritance_and_ase$padj_mh > 0.01 & inheritance_and_ase$padj_ph > 0.01 & inheritance_and_ase$padj_mp > 0.01),]
add <- inheritance_and_ase[which(inheritance_and_ase$padj_mh > 0.01 & inheritance_and_ase$padj_mp < 0.01 & inheritance_and_ase$padj_ph > 0.01),]
add1 <- add[which(add$LFC_mh < 0 & add$LFC_ph > 0),]
add2 <- add[which(add$LFC_mh > 0 & add$LFC_ph < 0),]
add <- rbind(add1, add2)
p1_dom <- inheritance_and_ase[which(inheritance_and_ase$padj_mh > 0.01 & inheritance_and_ase$padj_ph < 0.01),]
#p1_dom1 <- p1_dom[which(p1_dom$LFC_mh < 0 & p1_dom$LFC_ph > 0),]
#p1_dom2 <- p1_dom[which(p1_dom$LFC_mh > 0 & p1_dom$LFC_ph < 0),]
#p1_dom <- rbind(p1_dom1, p1_dom2)
p2_dom <- inheritance_and_ase[which(inheritance_and_ase$padj_mh < 0.01 & inheritance_and_ase$padj_ph > 0.01),]
#p2_dom1 <- p2_dom[which(p2_dom$LFC_mh < 0 & p2_dom$LFC_ph > 0),]
#p2_dom2 <- p2_dom[which(p2_dom$LFC_mh > 0 & p2_dom$LFC_ph < 0),]
#p2_dom <- rbind(p2_dom1, p2_dom2)
over_dom <- inheritance_and_ase[which(inheritance_and_ase$padj_mph < 0.01 & inheritance_and_ase$LFC_mh > 0 & inheritance_and_ase$LFC_ph > 0),]
under_dom <- inheritance_and_ase[which(inheritance_and_ase$padj_mph < 0.01 & inheritance_and_ase$LFC_mh < 0 & inheritance_and_ase$LFC_ph < 0),]
transgressive <- rbind(over_dom, under_dom)
dom <- rbind(p1_dom, p2_dom)
prop_con      <-paste(round((nrow(con)/total_genes * 100), digits = 2),"%", sep = "")
prop_add      <-paste(round((nrow(add)/total_genes * 100), digits = 2),"%", sep = "")
prop_p1_dom   <-paste(round((nrow(p1_dom)/total_genes * 100), digits = 2),"%", sep = "")
prop_p2_dom   <-paste(round((nrow(p2_dom)/total_genes * 100), digits = 2),"%", sep = "")
prop_overdom  <-paste(round((nrow(over_dom)/total_genes * 100), digits = 2),"%", sep = "")
prop_underdom <-paste(round((nrow(under_dom)/total_genes * 100), digits = 2),"%", sep = "")
prop_dom <- paste(round((nrow(dom)/total_genes * 100), digits = 2),"%", sep = "")
prop_transgressive <- paste(round((nrow(transgressive)/total_genes * 100), digits = 2),"%", sep = "")
inheritance <- rbind(con, add, dom, transgressive)
head(inheritance)
nrow(inheritance)
my_cols <- c(red,bla,blu,yel,gry)
cols_in <- my_cols[inheritance$inheritance]
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/inheritance_all_genes_8dpf.png", width = 7.25, height = 7.25, units = 'in', res = 400)
{plot(inheritance$LFC_mh, inheritance$LFC_ph, pch =16, col = "white",
ylab = "log2 fold change mh",
xlab = "log2 fold change ph",cex.axis=1.3, ylim = c(-7,6.5), xlim = c(-4.5,3.5))
points(con$LFC_mh,con$LFC_ph, col = my_cols[5])
points(transgressive$LFC_mh,transgressive$LFC_ph, col = my_cols[3],pch = 16, cex = 1.2)
points(add$LFC_mh,add$LFC_ph, col = my_cols[1],pch = 16, cex = 1.2)
points(dom$LFC_mh,dom$LFC_ph, col = my_cols[2],pch = 16, cex = 1.2)
abline(v=0, col = "black", lty = 3, lwd = 1.8)
abline(h=0, col = "black", lty = 3, lwd = 1.8)
legend("topleft", inset=0,
c(paste("additive ", prop_add, sep = ""),
paste("dominant ", prop_dom, sep = ""),
paste("transgressive ", prop_transgressive, sep = ""),
paste("conserved ", prop_con, sep = "")),
pt.cex = 1.3, col=c(red,bla,blu,gry), horiz=FALSE, bty="n",pch =c(16,16,16,1))}
#dev.off()
inheritance_and_ase <- read.table("inheritance_all_genes_crp_and_osp_48hpf.txt", header = TRUE, stringsAsFactors = FALSE)
total_genes <- nrow(inheritance_and_ase)
con <- inheritance_and_ase[which(inheritance_and_ase$padj_mph > 0.01 & inheritance_and_ase$padj_mh > 0.01 & inheritance_and_ase$padj_ph > 0.01 & inheritance_and_ase$padj_mp > 0.01),]
add <- inheritance_and_ase[which(inheritance_and_ase$padj_mh > 0.01 & inheritance_and_ase$padj_mp < 0.01 & inheritance_and_ase$padj_ph > 0.01),]
add1 <- add[which(add$LFC_mh < 0 & add$LFC_ph > 0),]
add2 <- add[which(add$LFC_mh > 0 & add$LFC_ph < 0),]
add <- rbind(add1, add2)
p1_dom <- inheritance_and_ase[which(inheritance_and_ase$padj_mh > 0.01 & inheritance_and_ase$padj_ph < 0.01),]
#p1_dom1 <- p1_dom[which(p1_dom$LFC_mh < 0 & p1_dom$LFC_ph > 0),]
#p1_dom2 <- p1_dom[which(p1_dom$LFC_mh > 0 & p1_dom$LFC_ph < 0),]
#p1_dom <- rbind(p1_dom1, p1_dom2)
p2_dom <- inheritance_and_ase[which(inheritance_and_ase$padj_mh < 0.01 & inheritance_and_ase$padj_ph > 0.01),]
#p2_dom1 <- p2_dom[which(p2_dom$LFC_mh < 0 & p2_dom$LFC_ph > 0),]
#p2_dom2 <- p2_dom[which(p2_dom$LFC_mh > 0 & p2_dom$LFC_ph < 0),]
#p2_dom <- rbind(p2_dom1, p2_dom2)
over_dom <- inheritance_and_ase[which(inheritance_and_ase$padj_mph < 0.01 & inheritance_and_ase$LFC_mh > 0 & inheritance_and_ase$LFC_ph > 0),]
under_dom <- inheritance_and_ase[which(inheritance_and_ase$padj_mph < 0.01 & inheritance_and_ase$LFC_mh < 0 & inheritance_and_ase$LFC_ph < 0),]
transgressive <- rbind(over_dom, under_dom)
dom <- rbind(p1_dom, p2_dom)
prop_con      <-paste(round((nrow(con)/total_genes * 100), digits = 2),"%", sep = "")
prop_add      <-paste(round((nrow(add)/total_genes * 100), digits = 2),"%", sep = "")
prop_p1_dom   <-paste(round((nrow(p1_dom)/total_genes * 100), digits = 2),"%", sep = "")
prop_p2_dom   <-paste(round((nrow(p2_dom)/total_genes * 100), digits = 2),"%", sep = "")
prop_overdom  <-paste(round((nrow(over_dom)/total_genes * 100), digits = 2),"%", sep = "")
prop_underdom <-paste(round((nrow(under_dom)/total_genes * 100), digits = 2),"%", sep = "")
prop_dom <- paste(round((nrow(dom)/total_genes * 100), digits = 2),"%", sep = "")
prop_transgressive <- paste(round((nrow(transgressive)/total_genes * 100), digits = 2),"%", sep = "")
inheritance <- rbind(con, add, dom, transgressive)
head(inheritance)
nrow(inheritance)
my_cols <- c(red,bla,blu,yel,gry)
cols_in <- my_cols[inheritance$inheritance]
#png("C:/Users/jmcgirr/Documents/remote_pups/second_submission/figs/inheritance_all_genes_48hdpf.png", width = 7.25, height = 7.25, units = 'in', res = 400)
{plot(inheritance$LFC_mh, inheritance$LFC_ph, pch =16, col = "white",
ylab = "log2 fold change mh",
xlab = "log2 fold change ph",cex.axis=1.3, ylim = c(-7,6.5), xlim = c(-4.5,3.5))
points(con$LFC_mh,con$LFC_ph, col = my_cols[5])
points(transgressive$LFC_mh,transgressive$LFC_ph, col = my_cols[3],pch = 16, cex = 1.2)
points(add$LFC_mh,add$LFC_ph, col = my_cols[1],pch = 16, cex = 1.2)
points(dom$LFC_mh,dom$LFC_ph, col = my_cols[2],pch = 16, cex = 1.2)
abline(v=0, col = "black", lty = 3, lwd = 1.8)
abline(h=0, col = "black", lty = 3, lwd = 1.8)
legend("topleft", inset=0,
c(paste("additive ", prop_add, sep = ""),
paste("dominant ", prop_dom, sep = ""),
paste("transgressive ", prop_transgressive, sep = ""),
paste("conserved ", prop_con, sep = "")),
pt.cex = 1.3, col=c(red,bla,blu,gry), horiz=FALSE, bty="n",pch =c(16,16,16,1))}
#dev.off()
genes <- read.table("c_brontotheroides.all.renamed.putative_function.genes_only.reformated.known.final.saf", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
genes <- read.table("c_brontotheroides.all.renamed.putative_function.genes_only.reformated.known.final.saf", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
names(genes) <- c("GeneID","seqnames", "start",  "end", "strand")
genes$start <- genes$start -10000
genes$end <- genes$end +10000
genes <- genes %>% as_granges()
de <- read.table("de_genes_8dpf_design_crp_and_osp_mvp.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
de_48 <- read.table("de_genes_48hpf_design_crp_and_osp_mvp_jeremy_genes.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
de_17 <- read.table("de_genes_17_20pf_design_crp_and_lil_mvp_jeremy_genes.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
de <-  de[which(de$padj <= 0.01),]
de <- de$Geneid
de_48 <-  de_48[which(de_48$padj <= 0.01),]
de_48 <- de_48$Geneid
de_17 <-  de_17[which(de_17$padj <= 0.01),]
de_17 <- de_17$Geneid
fst <- read.table("merged_fst_all_pupfish_filtered_snps_passed.Q20.MAF0.05.MAXMISS0.5.recode.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
quantile(fst$WEIR_AND_COCKERHAM_FST.2, 0.99)
high_fst <- fst[which(fst$WEIR_AND_COCKERHAM_FST.2 > 0.72 & fst$WEIR_AND_COCKERHAM_FST.2 < 1),]
high_fst$end <- high_fst$POS +1
names(high_fst) <- c("seqnames", "start", "all_v_m",  "all_v_p", "m_v_p","end")
high_fst <- high_fst %>% as_granges()
high_fst <- join_overlap_intersect(high_fst, genes) %>% as.data.frame()
num_snps <- high_fst[high_fst$GeneID %in% c(de,de_48,de_17), ]
high_fst <- unique(high_fst$GeneID)
fixed <- read.table("fixed_snps_mvp.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
fixed$end <- fixed$POS +1
names(fixed) <- c("seqnames", "start", "all_v_m",  "all_v_p", "m_v_p","end")
fixed <- fixed %>% as_granges()
fixed <- join_overlap_intersect(fixed, genes) %>% as.data.frame()
num_snps <- fixed[fixed$GeneID %in% c(de,de_48,de_17), ]
fixed <- unique(fixed$GeneID)
dxy <- read.csv("mxp_popgen_stats_corrected.csv", header = TRUE, stringsAsFactors = FALSE)
dxy <-  dxy[which(dxy$corr_dxy >= quantile(dxy$corr_dxy,0.90)[[1]]),]
names(dxy)[names(dxy)== "scaffold"] <- "seqnames"
dxy <- dxy %>% as_granges()
dxy <- join_overlap_intersect(dxy, genes) %>% as.data.frame()
dxy <- unique(dxy$GeneID)
popgen <- unique(intersect(high_fst,dxy))
sv <- read.table("shared_pvm_Svs.txt", header = TRUE, stringsAsFactors = FALSE, sep = "\t")
sv <- sv %>% as_granges()
sv <- join_overlap_intersect(sv, genes) %>% as.data.frame()
sv <- unique(sv$GeneID)
fixed_filter_de <- intersect(c(fixed,sv),c(de,de_48,de_17))
outlier_filter_de <- intersect(popgen,c(de,de_48,de_17))
#write.table(as.data.frame(fixed_filter_de),"C:/Users/jmcgirr/Documents/remote_pups/second_submission/candidates/de_fixed_20kb.txt", quote = FALSE, row.names = FALSE)
#write.table(as.data.frame(outlier_filter_de),"C:/Users/jmcgirr/Documents/remote_pups/second_submission/candidates/de_high_fst_dxy_20kb.txt", quote = FALSE, row.names = FALSE)
#write.table(as.data.frame(popgen),"C:/Users/jmcgirr/Documents/remote_pups/second_submission/candidates/high_fst_dxy_20kb.txt", quote = FALSE, row.names = FALSE)
